/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.biblioteca.livros;

import br.com.biblioteca.main.BlibiotecaMain;
import br.com.biblioteca.bd.Conexao;
import br.com.bliblioteca.valida.Valida;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;



/**
 *
 * @author IFMS
 */
public class CadastroLivros extends javax.swing.JFrame {

    private Connection conn;
    Livros l = new Livros();
    
    public CadastroLivros() {
        initComponents();
        txtDataLancamento.setFormats( new SimpleDateFormat("dd/MM/yyyy"));
        txtDataLancamento.setDate(Calendar.getInstance().getTime());
        setLocationRelativeTo(null);
        btnEditar.setEnabled(false);
        btnConsultar.setEnabled(true);
        btnCadastar.setEnabled(true);
        btnExcluir.setEnabled(false);
        txtNome.setFocusable(true);
         
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtDataLancamento = new org.jdesktop.swingx.JXDatePicker();
        btnCadastar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnConsultar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Nome:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Data Lan√ßamento:");

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        txtDataLancamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataLancamentoActionPerformed(evt);
            }
        });

        btnCadastar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCadastar.setText("CADASTRAR");
        btnCadastar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastarActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnEditar.setText("ALTERAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnConsultar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnConsultar.setText("CONSULTAR");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnExcluir.setText("EXCLUIR");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("Tela Inicial");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDataLancamento, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnConsultar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCadastar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExcluir)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNome, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDataLancamento, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCadastar)
                        .addComponent(btnEditar)
                        .addComponent(btnConsultar))))
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("CADASTRO DE LIVROS");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void btnCadastarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastarActionPerformed
       
        Valida v = new Valida();
       Integer resp = v.validaNomeLivro(txtNome.getText());
       
       if(resp != 0){
           conn = Conexao.conecta();
        
        try {
            if(conn == null || conn.isClosed()){
                JOptionPane.showMessageDialog(null,"erro ao conectar ao banco de dados!");
                BlibiotecaMain bl = new BlibiotecaMain();
                bl.setVisible(true);
            }
            
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
                SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
                Date aux = txtDataLancamento.getDate();
                Date aux1 = Date.from(Instant.now());
                String nome = "'"+txtNome.getText()+"'";    
                String data = ",'"+sdf.format(aux)+"'";
                String datacad = ",'"+sdf1.format(aux1)+"'";

                String sql = "INSERT INTO tbLivro (nome, data_lancamento, data_cad) VALUES "
                        + "("+nome+data+datacad+")";
                //JOptionPane.showMessageDialog(null,"sql: "+sql);

                Statement stmt = conn.createStatement();
                
                Integer retorno = stmt.executeUpdate(sql);
                
                if(retorno != 0){
                    JOptionPane.showMessageDialog(null,"Livro cadastrado com sucesso!","CADASTRO",JOptionPane.INFORMATION_MESSAGE);
                }else{
                    JOptionPane.showMessageDialog(null,"N√£o foi possivel cadastar!","CADASTRO",JOptionPane.ERROR_MESSAGE);
                }
                
                stmt.close();
                conn.close();
                
                listagem();
                
        } catch (SQLException ex) {
            Logger.getLogger(CadastroLivros.class.getName()).log(Level.SEVERE, null, ex);
        }
           
       }
        
              
    }//GEN-LAST:event_btnCadastarActionPerformed

    private void txtDataLancamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataLancamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataLancamentoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        Valida v = new Valida();
       Integer resp = v.validaNomeLivro(txtNome.getText());
       
       if(resp != 0){
           conn = Conexao.conecta();
        
        try {
            if(conn == null || conn.isClosed()){
                JOptionPane.showMessageDialog(null,"erro ao conectar ao banco de dados!");
                BlibiotecaMain bl = new BlibiotecaMain();
                bl.setVisible(true);
            }
            
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
                
                Date aux = txtDataLancamento.getDate();
                String nome = "'"+txtNome.getText()+"'";    
                String data = "'"+sdf.format(aux)+"'";
                

                String sql = "UPDATE  tbLivro SET nome = "+ nome +", data_lancamento = "+ data + "WHERE  idtbLivro = " + l.getId();
                //JOptionPane.showMessageDialog(null,"sql: "+sql);

                Statement stmt = conn.createStatement();
                
                Integer retorno = stmt.executeUpdate(sql);
                
                if(retorno != 0){
                    JOptionPane.showMessageDialog(null,"Livro "+ nome +" Atualizado com sucesso!","CADASTRO",JOptionPane.INFORMATION_MESSAGE);
                }else{
                    JOptionPane.showMessageDialog(null,"N√£o foi possivel Atualizar!","CADASTRO",JOptionPane.ERROR_MESSAGE);
                }
                
                stmt.close();
                conn.close();
                
                listagem();
                
        } catch (SQLException ex) {
            Logger.getLogger(CadastroLivros.class.getName()).log(Level.SEVERE, null, ex);
        }
       }


        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        
        try {
            ListagemLivros lv = new ListagemLivros();
            lv.setVisible(true);
            setVisible(false);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CadastroLivros.class.getName()).log(Level.SEVERE, null, ex);
        }
        

        // TODO add your handling code here:
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        
        String nome = "'"+txtNome.getText()+"'";
            
         int resp = JOptionPane.showConfirmDialog(null,"Deseja excluir o livro " + nome + "?");
         if(resp == JOptionPane.YES_OPTION){
             conn = Conexao.conecta();
        
        try {
            if(conn == null || conn.isClosed()){
                JOptionPane.showMessageDialog(null,"erro ao conectar ao banco de dados!");
                BlibiotecaMain bl = new BlibiotecaMain();
                bl.setVisible(true);
            }
            

                String sql = "DELETE FROM  tbLivro WHERE  idtbLivro = " + l.getId();
                //JOptionPane.showMessageDialog(null,"sql: "+sql);

                Statement stmt = conn.createStatement();
                
                Integer retorno = stmt.executeUpdate(sql);
                
                if(retorno != 0){
                    JOptionPane.showMessageDialog(null,"Livro "+ nome +" excluido com sucesso!","CADASTRO",JOptionPane.INFORMATION_MESSAGE);
                }else{
                    JOptionPane.showMessageDialog(null,"N√£o foi possivel excluir!","CADASTRO",JOptionPane.ERROR_MESSAGE);
                }
                
                stmt.close();
                conn.close();
                
                listagem();
                
        } catch (SQLException ex) {
            Logger.getLogger(CadastroLivros.class.getName()).log(Level.SEVERE, null, ex);
        }
         }
// TODO add your handling code here:
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        BlibiotecaMain bm = new BlibiotecaMain();
        bm.setVisible(true);
        setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroLivros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroLivros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroLivros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroLivros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroLivros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private org.jdesktop.swingx.JXDatePicker txtDataLancamento;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
void setDados(String  id){
    
    btnCadastar.setEnabled(false);
    btnConsultar.setEnabled(true);
    btnEditar.setEnabled(true);
    btnExcluir.setEnabled(true);
    conn = Conexao.conecta();
    
    try {
            if(conn == null || conn.isClosed()){
                JOptionPane.showMessageDialog(null,"Erro ao conectar ao banco de dados!");
                System.exit(-1);
            }
                Integer cond = Integer.parseInt(id);

                String sql = "SELECT idtbLivro, nome, data_lancamento, data_cad from tbLivro where idtbLivro = '" + cond + "'";
        
        try ( 
                Statement stmt = conn.createStatement()) {
                //select
                ResultSet res = stmt.executeQuery(sql);
            
                    while(res.next()){
                        
                    
                    l.setId(res.getInt("idtbLivro"));
                    
                    txtNome.setText(res.getString("nome"));
                    txtDataLancamento.setDate(res.getDate("data_lancamento"));
                    
                }
            stmt.close();
        }
        
                conn.close();
                
        } catch (SQLException ex) {
            Logger.getLogger(ListagemLivros.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            
        }
        private  void listagem(){
            try {
            ListagemLivros lv = new ListagemLivros();
            lv.setVisible(true);
            setVisible(false);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CadastroLivros.class.getName()).log(Level.SEVERE, null, ex);
        }
        }

}
